'This is the main subroutine of the exercise. It loops through each worksheet in the'workbook and for each worksheet, calls a sub to process the data and populate the resultsSub processStockData():        Dim sheetCount As Integer       'Get totals for each Sheet    sheetCount = ActiveWorkbook.Worksheets.Count    For i = 1 To sheetCount        getStockTotals (ActiveWorkbook.Worksheets(i).Name)   Next i   End Sub'This sub assumes that the data is sorted by ticker name. It loops through the data and for each new ticker'it keeps the total of volume and when we get to the next ticker it saves the ticker name and volume to the results'table and then moves on. We have to do an additional step for the last ticker outside of the loop to save the last ticker result'since the loop exits before the else statement is executed.Sub getStockTotals(sheetName As String):    Dim dataRowCount As Long    Dim row As Long    Dim vol As Double    Dim openValue As Double    Dim closeValue As Double    Dim yearlyChange As Double    Dim percentChange As Double    Dim ticker As String        'Clear columns J and K to store the ticker names and volumn totals. Doing this in case the program is run multiple times    ActiveWorkbook.Worksheets(sheetName).Columns(9).ClearContents    ActiveWorkbook.Worksheets(sheetName).Columns(10).ClearContents    ActiveWorkbook.Worksheets(sheetName).Columns(11).ClearContents    ActiveWorkbook.Worksheets(sheetName).Columns(12).ClearContents       'get the number of data rows including the header    dataRowCount = ActiveWorkbook.Worksheets(sheetName).Range("A1", Worksheets(sheetName).Range("A1").End(xlDown)).Rows.Count      'Set the headers for columns J and K    ActiveWorkbook.Worksheets(sheetName).Cells(1, 9).Value = "Ticker"    ActiveWorkbook.Worksheets(sheetName).Cells(1, 10).Value = "Yearly Change"    ActiveWorkbook.Worksheets(sheetName).Cells(1, 11).Value = "Percent Change"    ActiveWorkbook.Worksheets(sheetName).Cells(1, 12).Value = "Total Stock Volume"        'initialize the starting ticker and vol and row for the result table    ticker = CStr(ActiveWorkbook.Worksheets(sheetName).Cells(2, 1).Value)    openValue = ActiveWorkbook.Worksheets(sheetName).Cells(2, 3).Value    closeValue = ActiveWorkbook.Worksheets(sheetName).Cells(2, 6).Value    vol = 0    row = 2        'Loop through all the data rows and get the totals for each ticker. Then add the result table entry    'we loop through one more than dataRowCount to ensure that the last row gets added    For i = 2 To dataRowCount + 1                If ticker = ActiveWorkbook.Worksheets(sheetName).Cells(i, 1).Value Then            vol = vol + ActiveWorkbook.Worksheets(sheetName).Cells(i, 7).Value            closeValue = ActiveWorkbook.Worksheets(sheetName).Cells(i, 6).Value        Else            'we have moved on to the next ticker so add the ticker and total volume to the results table            yearlyChange = closeValue - openValue                        If openValue = 0 Then                percentChange = 0            Else                percentChange = yearlyChange / openValue            End If                        Call setTickerResult(sheetName, ticker, row, vol, yearlyChange, percentChange)                        'set the ticker, vol and row to the next one            ticker = ActiveWorkbook.Worksheets(sheetName).Cells(i, 1).Value            vol = ActiveWorkbook.Worksheets(sheetName).Cells(i, 7).Value            row = row + 1            openValue = ActiveWorkbook.Worksheets(sheetName).Cells(i, 3).Value            closeValue = ActiveWorkbook.Worksheets(sheetName).Cells(i, 6).Value                    End If    Next i         'Now that the first results table is populated, we populate the second results table    populateMax (sheetName)    End Sub'This sub is simply adding values into the result table and formating the cells in the Yearly Change column'to show red or green based on a negative or positive value. It also formats the percent columnSub setTickerResult(ByVal tSheet As String, tTicker As String, tRow As Long, tVol As Double, tYearlyChange As Double, tPercentChange As Double):    ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 9).Value = tTicker    ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 10).Value = tYearlyChange    ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 11).Value = tPercentChange    ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 12).Value = tVol                'Format the Percent Change column cells    ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 11).NumberFormat = "0.00%"        'Format the Yearly Change Column cells to red or green    If tYearlyChange < 0 Then        'highlight red        ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 10).Interior.Color = RGB(255, 0, 0)    Else        'highlight green        ActiveWorkbook.Worksheets(tSheet).Cells(tRow, 10).Interior.Color = RGB(0, 255, 0)    End If            End SubSub populateMax(s As String)        Dim maxIncrease As Double    Dim maxDecrease As Double    Dim maxVol As Double        Dim maxIncreaseTicker As String    Dim maxDecreaseTicker As String    Dim maxVolTicker As String        Dim resultsCount As Long        'Initialize    maxIncrease = 0    maxDecrease = 0    maxVol = 0        'get the number of result rows including the header    resultsCount = ActiveWorkbook.Worksheets(s).Range("I1", Worksheets(s).Range("I1").End(xlDown)).Rows.Count      'Set the headers for columns P and Q    ActiveWorkbook.Worksheets(s).Cells(1, 16).Value = "Ticker"    ActiveWorkbook.Worksheets(s).Cells(1, 17).Value = "Value"        'Set the row Labels    ActiveWorkbook.Worksheets(s).Cells(2, 15).Value = "Greatest % Increase"    ActiveWorkbook.Worksheets(s).Cells(3, 15).Value = "Greatest % Decrease"    ActiveWorkbook.Worksheets(s).Cells(4, 15).Value = "Greatest Total Volume"        'Loop through the results to find the max increase and decrease    For j = 2 To resultsCount                If ActiveWorkbook.Worksheets(s).Cells(j, 11).Value > maxIncrease Then            maxIncrease = ActiveWorkbook.Worksheets(s).Cells(j, 11).Value            maxIncreaseTicker = ActiveWorkbook.Worksheets(s).Cells(j, 9).Value        End If                If ActiveWorkbook.Worksheets(s).Cells(j, 11).Value < maxDecrease Then            maxDecrease = ActiveWorkbook.Worksheets(s).Cells(j, 11).Value            maxDecreaseTicker = ActiveWorkbook.Worksheets(s).Cells(j, 9).Value        End If                If ActiveWorkbook.Worksheets(s).Cells(j, 12).Value > maxVol Then            maxVol = ActiveWorkbook.Worksheets(s).Cells(j, 12).Value            maxVolTicker = ActiveWorkbook.Worksheets(s).Cells(j, 9).Value        End If            Next j        'Write the respective max ticker names    ActiveWorkbook.Worksheets(s).Cells(2, 16).Value = maxIncreaseTicker    ActiveWorkbook.Worksheets(s).Cells(3, 16).Value = maxDecreaseTicker    ActiveWorkbook.Worksheets(s).Cells(4, 16).Value = maxVolTicker        'Format the Percent Change column cells    ActiveWorkbook.Worksheets(s).Cells(2, 17).NumberFormat = "0.00%"    ActiveWorkbook.Worksheets(s).Cells(3, 17).NumberFormat = "0.00%"        'Write the respective max numbers    ActiveWorkbook.Worksheets(s).Cells(2, 17).Value = maxIncrease    ActiveWorkbook.Worksheets(s).Cells(3, 17).Value = maxDecrease    ActiveWorkbook.Worksheets(s).Cells(4, 17).Value = maxVol    End Sub